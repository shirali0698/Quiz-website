{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red0\green0\blue0;
\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c19608\c19608\c19608;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww18820\viewh13660\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\pard\pardeftab720\partightenfactor0

\f1\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
Q.1\'a0Which Set class should be most popular in a multi-threading environment, considering performance constraint?\
\
A) Hashset\
B) concurrentSkipListSet - A\
C) 
\fs36 \cf2 LinkedHashSet\
D) CopyOnWriteArraySet\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.2 Which Map class should be most popular in a multi-threading environment, considering performance constraint?\
\
A)
\fs36 \cf4 \cb5 Hashtable\
B)CopyOnWriteMap - A\
C) \cf2 \cb3 ConcurrentHashMap\
D)ConcurrentMap\
\

\fs40 \cf2 Q.3 Which allows the removal of elements from a collection?\
A)Enumaration\
B)Iterator\
C)Both\
D)one of the above - A\
\
\pard\pardeftab720\partightenfactor0
\cf2 Q.4 \cf2 Which permits the removal of elements from a collection?\
A)Enumaration\
B)Iterator - A\
C)none of the above\
\
\cf2 Q.5 \cf2 The Comparator interface contains the method?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)compareWith\
b)compareTo()\
c)compare() - A\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.6 \cf2 Which of those is synchronized?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)TreeMap\
b)HashMap\
c)Hashtable - A\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.7 \cf2 Which offers the best performance?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)TreeMap\
b)HashMap - A\
c)LinkedHashMap\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.8 \cf2 Which of these is the most popularly used class as a key in a HashMap?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)String\
b)Integer - A\
c)Double\
d)All of the above\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.9 \cf2 What should we use when add and remove operations are more frequent than get operations\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)LinkedList - A\
b)ArrayList\
c)Vector\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.10 \cf2 Iterator returned by ArrayList is?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf4 \cb5 a)Fail-fast - A\cf3 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 b)Fail-safe\
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 c)None of the above\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 \cb3 Q.11\cf2 \'a0Iterator returned by LinkedList is?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Fail-fast - A\
b)Fail-safe\
c)None of the above\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.12 \cf2 Iterator returned by CopyOnWriteArrayList is?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Fail-fast\
b)Fail-safe - A\
c)None of the above\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.13\cf2 \'a0Iterator returned by HashMap on key, value and entry are?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Fail-fast- A\
b)Fail-safe\
c)None of the above\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.14\'a0Iterator returned by Hashtable on key, value and entry are?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Fail-fast - A\
b)Fail-safe\
c)None of the both\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.15 Iterator returned by ConcurrentHashMap on key, value and entry is?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Fail-fast \
b)Fail-safe - A\
c)None of the both\cf2 \
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.16\'a0Iterator returned by LinkedHashMap on key, value and entry is?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Fail-fast - A\
b)Fail-safe \
c)None of the both\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 \
Q.16\'a0Which Set implementation is sorted and synchronized?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)LinkedHashSet\
b)ConcurrentSkipListSet - A\
c)TreeSet\
d)CopyOnWriteArraySet\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.17\'a0TreeMap -\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)Doesn't enable null key\
b)Allow several null values - A\
c)Both the above
\fs40 \cf2 \
\
Q.18\'a0Which Map is synchronized?\

\fs36 \cf2 a)Hashtable\
b)ConcurrentSkipListMap\
c)ConcurrentHashMap\
d)All of the above - A\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.19 concurrentSkipListMap permits ?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)One null key\
b)Many null values\
c)None of the above - A\
\
\pard\pardeftab720\partightenfactor0

\fs40 \cf2 Q.20\'a0Which of these helps insert elements at a specific position in a collection?\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 a)ArrayList\
b)LinkedList - A\
c)Any}